{"version":3,"file":"index-DhXm0g9_.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/components/Header.tsx","../../src/utils/urlValidator.ts","../../src/components/UrlInput.tsx","../../src/components/LoadingSpinner.tsx","../../src/components/ConvertButton.tsx","../../src/hooks/useClipboard.ts","../../src/components/ResultDisplay.tsx","../../src/components/Footer.tsx","../../src/services/acefileApi.ts","../../src/hooks/useConversion.ts","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React from 'react';\nimport { Link } from 'lucide-react';\n\nexport const Header: React.FC = () => {\n  return (\n    <header className=\"text-center mb-8\">\n      <div className=\"flex items-center justify-center mb-4\">\n        <div className=\"bg-blue-100 p-3 rounded-full\">\n          <Link className=\"w-8 h-8 text-blue-600\" />\n        </div>\n      </div>\n      <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">\n        Acefile to Google Drive Converter\n      </h1>\n      <p className=\"text-gray-600 max-w-2xl mx-auto\">\n        Convert Acefile links to direct Google Drive links instantly. \n        Simply paste your Acefile URL and get a shareable Google Drive link.\n      </p>\n    </header>\n  );\n};","/**\n * Validates if the provided URL is a valid Acefile URL\n * @param url - The URL to validate\n * @returns boolean indicating if the URL is valid\n */\nexport const isValidAcefileUrl = (url: string): boolean => {\n  if (!url || typeof url !== 'string') {\n    return false;\n  }\n\n  // Remove whitespace\n  const cleanUrl = url.trim();\n  \n  // Check if it's a valid URL format\n  try {\n    const urlObj = new URL(cleanUrl);\n    \n    // Check if it's an acefile.co domain\n    if (urlObj.hostname !== 'acefile.co') {\n      return false;\n    }\n    \n    // Check if the path matches the expected pattern /f/{id}/...\n    const pathPattern = /^\\/f\\/(\\d+)\\//;\n    return pathPattern.test(urlObj.pathname);\n  } catch {\n    return false;\n  }\n};\n\n/**\n * Extracts the file ID from an Acefile URL\n * @param url - The Acefile URL\n * @returns The extracted ID or null if invalid\n */\nexport const extractAcefileId = (url: string): string | null => {\n  if (!isValidAcefileUrl(url)) {\n    return null;\n  }\n\n  try {\n    const urlObj = new URL(url.trim());\n    const pathMatch = urlObj.pathname.match(/^\\/f\\/(\\d+)\\//);\n    return pathMatch ? pathMatch[1] : null;\n  } catch {\n    return null;\n  }\n};\n\n/**\n * Constructs a Google Drive URL from a file ID\n * @param fileId - The Google Drive file ID\n * @returns The complete Google Drive URL\n */\nexport const buildGoogleDriveUrl = (fileId: string): string => {\n  return `https://drive.google.com/file/d/${fileId}/view`;\n};","import React from 'react';\nimport { isValidAcefileUrl } from '../utils/urlValidator';\n\ninterface UrlInputProps {\n  value: string;\n  onChange: (value: string) => void;\n  onSubmit: () => void;\n  isLoading: boolean;\n  hasError: boolean;\n}\n\nexport const UrlInput: React.FC<UrlInputProps> = ({\n  value,\n  onChange,\n  onSubmit,\n  isLoading,\n  hasError\n}) => {\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      onSubmit();\n    }\n  };\n\n  const isValid = value.length === 0 || isValidAcefileUrl(value);\n\n  return (\n    <div className=\"space-y-2\">\n      <label htmlFor=\"acefile-url\" className=\"block text-sm font-medium text-gray-700\">\n        Acefile URL\n      </label>\n      <div className=\"relative\">\n        <input\n          id=\"acefile-url\"\n          type=\"url\"\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder=\"https://acefile.co/f/123456789/filename...\"\n          disabled={isLoading}\n          className={`\n            w-full px-4 py-3 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 \n            transition-colors duration-200 placeholder-gray-400\n            ${!isValid ? 'border-red-300 bg-red-50' : hasError ? 'border-red-300' : 'border-gray-300'}\n            ${isLoading ? 'bg-gray-50 cursor-not-allowed' : 'bg-white'}\n          `}\n        />\n        {!isValid && value.length > 0 && (\n          <div className=\"absolute inset-y-0 right-3 flex items-center\">\n            <div className=\"w-5 h-5 text-red-500\">\n              <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n          </div>\n        )}\n      </div>\n      {!isValid && value.length > 0 && (\n        <p className=\"text-sm text-red-600\">\n          Please enter a valid Acefile URL (https://acefile.co/f/...)\n        </p>\n      )}\n    </div>\n  );\n};","import React from 'react';\n\ninterface LoadingSpinnerProps {\n  size?: 'sm' | 'md' | 'lg';\n  className?: string;\n}\n\nexport const LoadingSpinner: React.FC<LoadingSpinnerProps> = ({ \n  size = 'md', \n  className = '' \n}) => {\n  const sizeClasses = {\n    sm: 'w-4 h-4',\n    md: 'w-6 h-6',\n    lg: 'w-8 h-8'\n  };\n\n  return (\n    <div className={`${sizeClasses[size]} ${className}`}>\n      <div className=\"animate-spin rounded-full border-2 border-gray-300 border-t-blue-600\"></div>\n    </div>\n  );\n};","import React from 'react';\nimport { LoadingSpinner } from './LoadingSpinner';\n\ninterface ConvertButtonProps {\n  onClick: () => void;\n  isLoading: boolean;\n  disabled: boolean;\n}\n\nexport const ConvertButton: React.FC<ConvertButtonProps> = ({\n  onClick,\n  isLoading,\n  disabled\n}) => {\n  return (\n    <button\n      onClick={onClick}\n      disabled={disabled || isLoading}\n      className={`\n        w-full py-3 px-6 rounded-lg font-medium text-white transition-all duration-200\n        ${disabled || isLoading\n          ? 'bg-gray-400 cursor-not-allowed'\n          : 'bg-blue-600 hover:bg-blue-700 hover:shadow-lg transform hover:-translate-y-0.5'\n        }\n        flex items-center justify-center space-x-2\n      `}\n    >\n      {isLoading ? (\n        <>\n          <LoadingSpinner size=\"sm\" className=\"text-white\" />\n          <span>Converting...</span>\n        </>\n      ) : (\n        <span>Convert to Google Drive</span>\n      )}\n    </button>\n  );\n};","import { useState, useCallback } from 'react';\nimport type { CopyState } from '../types';\n\n/**\n * Custom hook for clipboard operations with feedback\n */\nexport const useClipboard = (resetDelay: number = 2000) => {\n  const [copyState, setCopyState] = useState<CopyState>({\n    copied: false,\n    text: ''\n  });\n\n  const copyToClipboard = useCallback(async (text: string): Promise<boolean> => {\n    try {\n      await navigator.clipboard.writeText(text);\n      setCopyState({ copied: true, text });\n      \n      // Reset the copied state after delay\n      setTimeout(() => {\n        setCopyState(prev => ({ ...prev, copied: false }));\n      }, resetDelay);\n      \n      return true;\n    } catch (error) {\n      console.error('Failed to copy to clipboard:', error);\n      setCopyState({ copied: false, text: '' });\n      return false;\n    }\n  }, [resetDelay]);\n\n  return {\n    copyToClipboard,\n    copied: copyState.copied,\n    copiedText: copyState.text\n  };\n};","import React from 'react';\nimport type { ConversionResult } from '../types';\nimport { useClipboard } from '../hooks/useClipboard';\n\ninterface ResultDisplayProps {\n  result: ConversionResult;\n  onClear: () => void;\n}\n\nexport const ResultDisplay: React.FC<ResultDisplayProps> = ({ result, onClear }) => {\n  const { copyToClipboard, copied } = useClipboard();\n\n  const handleCopy = async () => {\n    if (result.googleDriveUrl) {\n      await copyToClipboard(result.googleDriveUrl);\n    }\n  };\n\n  if (!result.success) {\n    return (\n      <div className=\"mt-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n        <div className=\"flex items-start space-x-3\">\n          <div className=\"flex-shrink-0\">\n            <div className=\"w-5 h-5 text-red-500\">\n              <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n          </div>\n          <div className=\"flex-1\">\n            <h3 className=\"text-sm font-medium text-red-800\">Conversion Failed</h3>\n            <p className=\"mt-1 text-sm text-red-700\">{result.error}</p>\n          </div>\n          <button\n            onClick={onClear}\n            className=\"flex-shrink-0 text-red-400 hover:text-red-600 transition-colors\"\n          >\n            <div className=\"w-5 h-5\">\n              <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\n      <div className=\"flex items-start space-x-3\">\n        <div className=\"flex-shrink-0\">\n          <div className=\"w-5 h-5 text-green-500\">\n            <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n            </svg>\n          </div>\n        </div>\n        <div className=\"flex-1 min-w-0\">\n          <h3 className=\"text-sm font-medium text-green-800\">Conversion Successful!</h3>\n          <div className=\"mt-2 p-3 bg-white border border-green-200 rounded-md\">\n            <div className=\"flex items-center justify-between\">\n              <p className=\"text-sm text-gray-900 font-mono break-all\">\n                {result.googleDriveUrl}\n              </p>\n              <button\n                onClick={handleCopy}\n                className={`\n                  ml-3 flex-shrink-0 px-3 py-1 text-xs font-medium rounded-md transition-all duration-200\n                  ${copied \n                    ? 'bg-green-100 text-green-800 border border-green-300' \n                    : 'bg-gray-100 text-gray-700 border border-gray-300 hover:bg-gray-200'\n                  }\n                `}\n              >\n                {copied ? 'Copied!' : 'Copy'}\n              </button>\n            </div>\n          </div>\n        </div>\n        <button\n          onClick={onClear}\n          className=\"flex-shrink-0 text-green-400 hover:text-green-600 transition-colors\"\n        >\n          <div className=\"w-5 h-5\">\n            <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n            </svg>\n          </div>\n        </button>\n      </div>\n    </div>\n  );\n};","import React from 'react';\nimport { Github, ExternalLink } from 'lucide-react';\n\nexport const Footer: React.FC = () => {\n  return (\n    <footer className=\"mt-12 pt-8 border-t border-gray-200\">\n      <div className=\"text-center space-y-4\">\n        <div className=\"flex items-center justify-center space-x-6\">\n          <a\n            href=\"https://github.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-900 transition-colors\"\n          >\n            <Github className=\"w-5 h-5\" />\n            <span>Source Code</span>\n          </a>\n          <a\n            href=\"https://acefile.co\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-900 transition-colors\"\n          >\n            <ExternalLink className=\"w-5 h-5\" />\n            <span>Acefile.co</span>\n          </a>\n        </div>\n        <p className=\"text-sm text-gray-500\">\n          Built with React, TypeScript, and Tailwind CSS\n        </p>\n      </div>\n    </footer>\n  );\n};","import type { AcefileApiResponse, ConversionResult } from '../types';\nimport { extractAcefileId, buildGoogleDriveUrl } from '../utils/urlValidator';\n\n/**\n * Converts an Acefile URL to a Google Drive URL\n * @param acefileUrl - The Acefile URL to convert\n * @returns Promise<ConversionResult>\n */\nexport const convertAcefileToGoogleDrive = async (acefileUrl: string): Promise<ConversionResult> => {\n  try {\n    // Extract the file ID from the Acefile URL\n    const fileId = extractAcefileId(acefileUrl);\n    \n    if (!fileId) {\n      return {\n        success: false,\n        error: 'Invalid Acefile URL format. Please ensure the URL follows the pattern: https://acefile.co/f/{id}/...'\n      };\n    }\n\n    // Make API call to Acefile service\n    const apiUrl = `/api/service/resource_check/${fileId}/`;\n    \n    const response = await fetch(apiUrl, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`API request failed with status: ${response.status}`);\n    }\n\n    const data: AcefileApiResponse = await response.json();\n\n    // Check if the response contains the required data\n    if (!data.data || typeof data.data !== 'string') {\n      return {\n        success: false,\n        error: 'Invalid response from Acefile API. The file might not exist or be accessible.'\n      };\n    }\n\n    // Build the Google Drive URL\n    const googleDriveUrl = buildGoogleDriveUrl(data.data);\n\n    return {\n      success: true,\n      googleDriveUrl\n    };\n\n  } catch (error) {\n    console.error('Conversion error:', error);\n    \n    // Handle different types of errors\n    if (error instanceof TypeError && error.message.includes('fetch')) {\n      return {\n        success: false,\n        error: 'Network error. Please check your internet connection and try again.'\n      };\n    }\n\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'An unexpected error occurred during conversion.'\n    };\n  }\n};","import { useState, useCallback } from 'react';\nimport type { ConversionState } from '../types';\nimport { convertAcefileToGoogleDrive } from '../services/acefileApi';\n\n/**\n * Custom hook for managing the conversion process\n */\nexport const useConversion = () => {\n  const [state, setState] = useState<ConversionState>({\n    isLoading: false,\n    result: null,\n    inputUrl: ''\n  });\n\n  const setInputUrl = useCallback((url: string) => {\n    setState(prev => ({ ...prev, inputUrl: url }));\n  }, []);\n\n  const convertUrl = useCallback(async () => {\n    if (!state.inputUrl.trim()) {\n      setState(prev => ({\n        ...prev,\n        result: {\n          success: false,\n          error: 'Please enter an Acefile URL'\n        }\n      }));\n      return;\n    }\n\n    setState(prev => ({ ...prev, isLoading: true, result: null }));\n\n    try {\n      const result = await convertAcefileToGoogleDrive(state.inputUrl.trim());\n      setState(prev => ({ ...prev, result, isLoading: false }));\n    } catch (error) {\n      setState(prev => ({\n        ...prev,\n        isLoading: false,\n        result: {\n          success: false,\n          error: 'An unexpected error occurred. Please try again.'\n        }\n      }));\n    }\n  }, [state.inputUrl]);\n\n  const clearResult = useCallback(() => {\n    setState(prev => ({ ...prev, result: null }));\n  }, []);\n\n  return {\n    ...state,\n    setInputUrl,\n    convertUrl,\n    clearResult\n  };\n};","import React from 'react';\nimport { Header } from './components/Header';\nimport { UrlInput } from './components/UrlInput';\nimport { ConvertButton } from './components/ConvertButton';\nimport { ResultDisplay } from './components/ResultDisplay';\nimport { Footer } from './components/Footer';\nimport { useConversion } from './hooks/useConversion';\nimport { isValidAcefileUrl } from './utils/urlValidator';\n\nfunction App() {\n  const {\n    inputUrl,\n    isLoading,\n    result,\n    setInputUrl,\n    convertUrl,\n    clearResult\n  } = useConversion();\n\n  const isInputValid = inputUrl.trim().length > 0 && isValidAcefileUrl(inputUrl.trim());\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100\">\n      <div className=\"container mx-auto px-4 py-8 max-w-4xl\">\n        <Header />\n        \n        <main className=\"bg-white rounded-xl shadow-lg p-8 mb-8\">\n          <div className=\"space-y-6\">\n            <UrlInput\n              value={inputUrl}\n              onChange={setInputUrl}\n              onSubmit={convertUrl}\n              isLoading={isLoading}\n              hasError={result?.success === false}\n            />\n            \n            <ConvertButton\n              onClick={convertUrl}\n              isLoading={isLoading}\n              disabled={!isInputValid}\n            />\n            \n            {result && (\n              <ResultDisplay\n                result={result}\n                onClear={clearResult}\n              />\n            )}\n          </div>\n          \n          <div className=\"mt-8 p-4 bg-gray-50 rounded-lg\">\n            <h3 className=\"text-sm font-medium text-gray-900 mb-2\">How it works:</h3>\n            <ol className=\"text-sm text-gray-600 space-y-1\">\n              <li>1. Paste your Acefile URL (e.g., https://acefile.co/f/123456789/filename...)</li>\n              <li>2. Click \"Convert to Google Drive\" to process the link</li>\n              <li>3. Get your direct Google Drive link and copy it to share</li>\n            </ol>\n          </div>\n        </main>\n        \n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App.tsx';\nimport './index.css';\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","createRoot","Header","jsxs","jsx","Link","isValidAcefileUrl","url","cleanUrl","urlObj","extractAcefileId","pathMatch","buildGoogleDriveUrl","fileId","UrlInput","value","onChange","onSubmit","isLoading","hasError","handleKeyPress","isValid","LoadingSpinner","size","className","sizeClasses","ConvertButton","onClick","disabled","Fragment","useClipboard","resetDelay","copyState","setCopyState","useState","useCallback","text","prev","error","ResultDisplay","result","onClear","copyToClipboard","copied","handleCopy","Footer","Github","ExternalLink","convertAcefileToGoogleDrive","acefileUrl","apiUrl","response","data","useConversion","state","setState","setInputUrl","convertUrl","clearResult","App","inputUrl","isInputValid","StrictMode"],"mappings":"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","x_google_ignoreList":[0,1,2]}